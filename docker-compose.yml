services:
  ###############################################################
  # Better-Next Service
  ###############################################################
  better-next:
    #image: ...
    container_name: better-next
    security_opt:
      - no-new-privileges:true
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - default
      - t3_proxy
    ports:
      - '3333:3000'
    #volumes:
    #  - '/var/log/nextjs:/var/log/nextjs:delegated'
    #  - 'next-cache:/app/.next/cache:delegated'
    environment:
      #ENV_FILE_PATH: .env       # Pass the location of the .env file to the build
      AUTH_TRUST_HOST: ${AUTH_TRUST_HOST}
      BETTER_AUTH_DEBUG: ${BETTER_AUTH_DEBUG}
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL}
      DATABASE_URL: ${DATABASE_URL}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      IGNORE_SSL_VERIFICATION: ${IGNORE_SSL_VERIFICATION}
      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET}
      MICROSOFT_TENANT_ID: ${MICROSOFT_TENANT_ID}
      NEXT_PUBLIC_APP_AUTHOR: ${NEXT_PUBLIC_APP_AUTHOR}
      NEXT_PUBLIC_APP_CONTACT_EMAIL: ${NEXT_PUBLIC_APP_CONTACT_EMAIL}
      NEXT_PUBLIC_APP_DESCRIPTION: ${NEXT_PUBLIC_APP_DESCRIPTION}
      NEXT_PUBLIC_APP_DOMAIN: ${NEXT_PUBLIC_APP_DOMAIN}
      NEXT_PUBLIC_APP_LOGO: ${NEXT_PUBLIC_APP_LOGO}
      NEXT_PUBLIC_APP_NAME: ${NEXT_PUBLIC_APP_NAME}
      NEXT_PUBLIC_APP_REPO_URL: ${NEXT_PUBLIC_APP_REPO_URL}
      NEXT_PUBLIC_APP_TIMEZONE: ${NEXT_PUBLIC_APP_TIMEZONE}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
      NEXT_PUBLIC_LOG_LEVEL: ${NEXT_PUBLIC_LOG_LEVEL}
      NEXT_PUBLIC_SHOW_LOGGER: ${NEXT_PUBLIC_SHOW_LOGGER}
      NEXT_PUBLIC_UMAMI_HOST: ${NEXT_PUBLIC_UMAMI_HOST}
      NEXT_PUBLIC_UMAMI_WEBSITE_ID: ${NEXT_PUBLIC_UMAMI_WEBSITE_ID}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      SENTRY_ANALYZE: ${SENTRY_ANALYZE}
      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
      SENTRY_CI: ${SENTRY_CI}
      SENTRY_DSN: ${SENTRY_DSN}
      SENTRY_ORG: ${SENTRY_ORG}
      SENTRY_PROJECT: ${SENTRY_PROJECT}
      SENTRY_URL: ${SENTRY_URL}
      NODE_TLS_REJECT_UNAUTHORIZED: ${NODE_TLS_REJECT_UNAUTHORIZED}
      SKIP_ENV_VALIDATION: true
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        compress: "true"
    healthcheck:
      test: curl -f --retry 3 --max-time 5 --retry-delay 5 --retry-max-time 30 http://localhost:3000 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.better-next-rtr.entrypoints=websecure"
      - "traefik.http.routers.better-next-rtr.rule=Host(`$DOMAINNAME_1`)"
      # Middlewares
      - "traefik.http.routers.better-next-rtr.middlewares=chain-better-next@file"
      # HTTP Services
      - "traefik.http.routers.better-next-rtr.service=better-next-svc"
      - "traefik.http.services.better-next-svc.loadbalancer.server.port=3000"

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  default:
    external: true
  t3_proxy:
    external: true
